{"ast":null,"code":"import _classCallCheck from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/priyanka/task/myapp/src/components/user/UserForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nvar UserForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserForm, _React$Component);\n\n  function UserForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderField = function (_ref) {\n      var input = _ref.input,\n          Type = _ref.Type,\n          label = _ref.label,\n          meta = _ref.meta;\n      var className = \"field \".concat(meta.error && meta.touched ? 'error' : '');\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        type: Type,\n        placeholder: label,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      })), _this.renderError(meta));\n    };\n\n    _this.onSubmit = function (formValues) {\n      _this.props.onSubmit(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(UserForm, [{\n    key: \"renderError\",\n    value: function renderError(_ref2) {\n      var error = _ref2.error,\n          touched = _ref2.touched;\n\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          className: \"ui error message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, error));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        className: \"ui form error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Field, {\n        Type: \"text\",\n        name: \"first_name\",\n        component: this.renderField,\n        label: \"Enter First Name\",\n        placeholder: \"Enter your first name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Field, {\n        Type: \"text\",\n        name: \"last_name\",\n        component: this.renderField,\n        label: \"Enter Last Name\",\n        placeholder: \"Enter your last name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Field, {\n        Type: \"email\",\n        name: \"email\",\n        component: this.renderField,\n        label: \"Enter Email ID\",\n        placeholder: \"Enter email id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Field, {\n        Type: \"text\",\n        name: \"username\",\n        component: this.renderField,\n        label: \"Enter User Name\",\n        placeholder: \"Enter username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Field, {\n        Type: \"password\",\n        name: \"password\",\n        component: this.renderField,\n        label: \"Enter Password\",\n        placeholder: \"Enter password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Field, {\n        Type: \"password\",\n        name: \"cpassword\",\n        component: this.renderField,\n        idLable: \"cpsw\",\n        label: \"Confirm Password\",\n        placeholder: \"Confirm password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"ui button red\",\n        disabled: this.props.pristine || this.props.submitting,\n        onClick: this.props.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Clear\")));\n    }\n  }]);\n\n  return UserForm;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.first_name) {\n    errors.first_name = \"First name required !!!\";\n  } else if (formValues.first_name.length > 30) {\n    errors.password = 'Max length is 30 character';\n  }\n\n  if (!formValues.last_name) {\n    errors.last_name = \"Last name required!!!\";\n  } else if (formValues.last_name.length > 30) {\n    errors.password = 'Max length is 30 character';\n  }\n\n  if (!formValues.email) {\n    errors.email = \"Email required!!!\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formValues.email)) {\n    errors.email = 'Enter Valid Email';\n  }\n\n  if (!formValues.username) {\n    errors.username = \"Username required......!!!\";\n  } else if (formValues.username.length > 30) {\n    errors.password = 'Max length is 30 character';\n  } else if (!/[^a-zA-Z0-9 ]/i.test(formValues.username)) {\n    errors.username = 'Only Alphanumeric value will accepted';\n  }\n\n  if (!formValues.password) {\n    errors.password = \"Password required.....!!!\";\n  } else if (formValues.password.length > 6) {\n    errors.password = 'Minimum length is 6';\n  } else if (formValues.password.length > 20) {\n    errors.password = 'Minimum length is 6';\n  } else if (!/[^a-zA-Z0-9 ]/i.test(formValues.password)) {\n    errors.password = 'Only Alfanumeric value will aceepted';\n  }\n\n  if (!formValues.cpassword) {\n    errors.cpassword = \"Confirm your password!!!\";\n  } else if (formValues.password !== formValues.cpassword) {\n    errors.cpassword = \"mismatch password!!!\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'registerForm',\n  validate: validate\n})(UserForm);","map":{"version":3,"sources":["/home/priyanka/task/myapp/src/components/user/UserForm.js"],"names":["React","Field","reduxForm","UserForm","renderField","input","Type","label","meta","className","error","touched","renderError","onSubmit","formValues","props","handleSubmit","pristine","submitting","reset","Component","validate","errors","first_name","length","password","last_name","email","test","username","cpassword","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\n\nclass UserForm extends React.Component {\n  \n  renderError({error,touched}) {\n    if(touched && error){\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      );\n    }\n  }\n\n renderField = ({input,Type, label,meta }) => {\n   const className= `field ${meta.error && meta.touched ? 'error' : '' }`;\n    return (\n      <div className={className}>\n        <label>\n          {label}\n        </label>\n        <input {...input} type={Type} placeholder={label} autoComplete=\"off\"/>\n        {this.renderError(meta)}\n      </div>\n    )\n  }\n\n  onSubmit = formValues => {\n   \n    this.props.onSubmit(formValues);\n  }\n\n  render () {\n    return (\n      <div>\n       <form onSubmit={this.props.handleSubmit(this.onSubmit)} className='ui form error'>\n        <Field \n          Type='text'\n          name='first_name'\n          component={this.renderField}\n          label='Enter First Name'\n          placeholder='Enter your first name'\n        />\n        <Field \n          Type='text'\n          name='last_name'\n          component={this.renderField}\n          label='Enter Last Name'\n          placeholder='Enter your last name'\n        />\n        <Field \n          Type='email'\n          name='email'\n          component={this.renderField}\n          label='Enter Email ID'\n          placeholder='Enter email id'\n        />\n        <Field \n          Type='text'\n          name='username'\n          component={this.renderField}\n          label='Enter User Name'\n          placeholder='Enter username'\n        />\n        <Field \n          Type='password' \n          name='password' \n          component={this.renderField} \n          label='Enter Password'\n          placeholder='Enter password'\n          \n        />\n        <Field \n          Type='password' \n          name='cpassword' \n          component={this.renderField} \n          idLable='cpsw' \n          label='Confirm Password'\n          placeholder='Confirm password'\n          \n        />\n        <button className=\"ui button primary\" >Submit</button>\n        <button className='ui button red' disabled={this.props.pristine || this.props.submitting} onClick={this.props.reset}>\n          Clear\n        </button>\n      </form>\n      </div>      \n    )\n  }\n}\n\n\nconst validate = formValues => {\n  const errors = {};\n  \n  if(!formValues.first_name){\n    errors.first_name = \"First name required !!!\";\n  }else if(formValues.first_name.length>30){\n    errors.password = 'Max length is 30 character'\n  }\n\n  if(!formValues.last_name){\n    errors.last_name = \"Last name required!!!\";\n  }else if(formValues.last_name.length>30){\n    errors.password = 'Max length is 30 character'\n  }\n\n  if(!formValues.email){\n    errors.email = \"Email required!!!\"; \n  }else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formValues.email)) {\n    errors.email = 'Enter Valid Email'\n  }\n\n  if(!formValues.username){\n    errors.username = \"Username required......!!!\";\n  }else if(formValues.username.length>30){\n    errors.password = 'Max length is 30 character'\n  }else if (!/[^a-zA-Z0-9 ]/i.test(formValues.username)) {\n    errors.username = 'Only Alphanumeric value will accepted'\n  }\n\n  if(!formValues.password){\n    errors.password = \"Password required.....!!!\";\n  }else if(formValues.password.length>6 ){\n    errors.password = 'Minimum length is 6'  \n  }else if(formValues.password.length>20 ){\n    errors.password = 'Minimum length is 6' \n  }\n  else if (!/[^a-zA-Z0-9 ]/i.test(formValues.password)) {\n    errors.password = 'Only Alfanumeric value will aceepted'\n  }\n\n  if(!formValues.cpassword){\n    errors.cpassword = \"Confirm your password!!!\";\n  }else if(formValues.password !== formValues.cpassword){\n    errors.cpassword = \"mismatch password!!!\";\n  }\n  return errors;\n};\n\nexport default reduxForm({\n    form: 'registerForm',\n    validate\n  })(UserForm);\n\n"]},"metadata":{},"sourceType":"module"}