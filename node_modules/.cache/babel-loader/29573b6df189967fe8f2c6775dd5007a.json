{"ast":null,"code":"import _classCallCheck from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/priyanka/task/myapp/src/components/userpost/PostDelete.js\";\nimport React from 'react';\nimport Modal from '../Modal';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport history from '../../history';\nimport { deleteStream } from '../../actions';\n\nvar StreamDelete =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamDelete, _React$Component);\n\n  function StreamDelete() {\n    _classCallCheck(this, StreamDelete);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamDelete).apply(this, arguments));\n  }\n\n  _createClass(StreamDelete, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"renderAction\",\n    value: function renderAction() {\n      var _this = this;\n\n      var id = this.props.match.params.id;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.props.deleteStream(id);\n        },\n        className: \"ui negative button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(Link, {\n        to: \"/\",\n        className: \"ui button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Cancel\"));\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      if (!this.props.stream) {\n        return 'Are you sure you want to delete this stream...?';\n      }\n\n      return \"Are you sure you want to delete this stream...with this title:\".concat(this.props.stream.title);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Modal, {\n        title: \"Delete Stream\",\n        content: this.renderContent(),\n        action: this.renderAction(),\n        onDismiss: function onDismiss() {\n          return history.push('/');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return StreamDelete;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream,\n  deleteStream: deleteStream\n})(StreamDelete);","map":{"version":3,"sources":["/home/priyanka/task/myapp/src/components/userpost/PostDelete.js"],"names":["React","Modal","connect","Link","history","deleteStream","StreamDelete","props","fetchStream","match","params","id","stream","title","renderContent","renderAction","push","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,YAAT,QAA6B,eAA7B;;IAGMC,Y;;;;;;;;;;;;;wCACiB;AACf,WAAKC,KAAL,CAAWC,WAAX,CAAuB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;;mCAEa;AAAA;;AAAA,UACFA,EADE,GACK,KAAKJ,KAAL,CAAWE,KAAX,CAAiBC,MADtB,CACFC,EADE;AAEV,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,OAAO,EAAI;AAAA,iBAAM,KAAI,CAACJ,KAAL,CAAWF,YAAX,CAAwBM,EAAxB,CAAN;AAAA,SADf;AAEI,QAAA,SAAS,EAAE,oBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAOI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,GAAV;AAAc,QAAA,SAAS,EAAE,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,CADJ;AAWH;;;oCACc;AACX,UAAG,CAAC,KAAKJ,KAAL,CAAWK,MAAf,EAAsB;AAClB,eAAO,iDAAP;AACH;;AACD,qFAAwE,KAAKL,KAAL,CAAWK,MAAX,CAAkBC,KAA1F;AACH;;;6BAEO;AACJ,aACK,oBAAC,KAAD;AACG,QAAA,KAAK,EAAE,eADV;AAEG,QAAA,OAAO,EAAG,KAAKC,aAAL,EAFb;AAGG,QAAA,MAAM,EAAG,KAAKC,YAAL,EAHZ;AAIG,QAAA,SAAS,EAAG;AAAA,iBAAMX,OAAO,CAACY,IAAR,CAAa,GAAb,CAAN;AAAA,SAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL;AAQH;;;;EAnCsBhB,KAAK,CAACiB,S;;AAsCjC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,SAAO;AAAER,IAAAA,MAAM,EAAGO,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAX,GAAP;AACH,CAFD;;AAIA,eAAeT,OAAO,CAClBgB,eADkB,EAElB;AAACV,EAAAA,WAAW,EAAXA,WAAD;AAAeH,EAAAA,YAAY,EAAZA;AAAf,CAFkB,CAAP,CAGbC,YAHa,CAAf","sourcesContent":["import React from 'react';\nimport Modal from '../Modal';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport history from '../../history';\nimport { deleteStream } from '../../actions';\n\n\nclass StreamDelete extends React.Component {\n    componentDidMount(){\n        this.props.fetchStream(this.props.match.params.id);\n    }\n    \n    renderAction(){\n        const { id } = this.props.match.params;\n        return (\n            <React.Fragment>\n                <button \n                    onClick = {() => this.props.deleteStream(id)} \n                    className =\"ui negative button\"\n                >\n                    Delete\n                </button>\n                <Link to =\"/\" className =\"ui button\">Cancel</Link>\n            </React.Fragment>      \n        );\n    }\n    renderContent(){\n        if(!this.props.stream){\n            return 'Are you sure you want to delete this stream...?'\n        }\n        return `Are you sure you want to delete this stream...with this title:${this.props.stream.title}`\n    }\n    \n    render(){\n        return (\n             <Modal \n                title =\"Delete Stream\"\n                content ={this.renderContent()}\n                action ={this.renderAction()}\n                onDismiss ={() => history.push('/')}\n            />   \n        );\n    }\n}\n\nconst mapStateToProps = (state ,ownProps) => {\n    return { stream : state.streams[ownProps.match.params.id]}\n};\n\nexport default connect(\n    mapStateToProps,\n    {fetchStream , deleteStream}\n)(StreamDelete);"]},"metadata":{},"sourceType":"module"}