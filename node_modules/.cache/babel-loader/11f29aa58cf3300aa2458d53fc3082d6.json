{"ast":null,"code":"import _classCallCheck from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/priyanka/task/myapp/src/components/user/SignIn.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { signIn } from '../../actions';\nimport { connect } from 'react-redux';\n\nvar SignIn =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignIn, _React$Component);\n\n  function SignIn() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignIn);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignIn)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderField = function (_ref) {\n      var input = _ref.input,\n          Type = _ref.Type,\n          label = _ref.label,\n          meta = _ref.meta,\n          placeholder = _ref.placeholder;\n      var className = \"field \".concat(meta.error && meta.touched ? 'error' : '');\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        type: Type,\n        holder: placeholder,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      })), _this.renderError(meta));\n    };\n\n    _this.onSubmit = function (formValues) {\n      _this.props.signIn(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(SignIn, [{\n    key: \"renderError\",\n    value: function renderError(_ref2) {\n      var error = _ref2.error,\n          touched = _ref2.touched;\n\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          className: \"ui error message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, error));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!localStorage.getItem(\"authToken\")) {}\n    }\n  }]);\n\n  return SignIn;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.username) {\n    errors.username = \"must enter username!!!\";\n  }\n\n  if (!formValues.password) {\n    errors.password = \"must enter password!!!\";\n  }\n\n  return errors;\n};\n\nvar form = reduxForm({\n  form: 'loginForm',\n  validate: validate\n})(SignIn);\nexport default connect(null, {\n  signIn: signIn\n})(form);","map":{"version":3,"sources":["/home/priyanka/task/myapp/src/components/user/SignIn.js"],"names":["React","Field","reduxForm","signIn","connect","SignIn","renderField","input","Type","label","meta","placeholder","className","error","touched","renderError","onSubmit","formValues","props","localStorage","getItem","Component","validate","errors","username","password","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAAQC,MAAR,QAAqB,eAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAGMC,M;;;;;;;;;;;;;;;;;;UAYLC,W,GAAc,gBAA0C;AAAA,UAAxCC,KAAwC,QAAxCA,KAAwC;AAAA,UAAlCC,IAAkC,QAAlCA,IAAkC;AAAA,UAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,UAAtBC,IAAsB,QAAtBA,IAAsB;AAAA,UAAjBC,WAAiB,QAAjBA,WAAiB;AACvD,UAAMC,SAAS,mBAAWF,IAAI,CAACG,KAAL,IAAcH,IAAI,CAACI,OAAnB,GAA6B,OAA7B,GAAuC,EAAlD,CAAf;AACA,aACE;AAAK,QAAA,SAAS,EAAEF,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,KADH,CADF,EAIE,+CAAWF,KAAX;AAAmB,QAAA,IAAI,EAAEC,IAAzB;AAA+B,QAAA,MAAM,EAAGG,WAAxC;AAAqD,QAAA,YAAY,EAAC,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,EAKG,MAAKI,WAAL,CAAiBL,IAAjB,CALH,CADF;AASD,K;;UAGDM,Q,GAAW,UAAAC,UAAU,EAAI;AACvB,YAAKC,KAAL,CAAWf,MAAX,CAAkBc,UAAlB;AACD,K;;;;;;;uCA1B6B;AAAA,UAAfJ,KAAe,SAAfA,KAAe;AAAA,UAATC,OAAS,SAATA,OAAS;;AAC1B,UAAGA,OAAO,IAAID,KAAd,EAAoB;AAClB,eACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBA,KAAzB,CADF,CADF;AAKD;AACF;;;6BAqBS;AACR,UAAG,CAACM,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAJ,EAAsC,CAErC;AAEF;;;;EApCkBpB,KAAK,CAACqB,S;;AAwC3B,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAL,UAAU,EAAI;AAC7B,MAAMM,MAAM,GAAG,EAAf;;AAEA,MAAG,CAACN,UAAU,CAACO,QAAf,EAAwB;AACtBD,IAAAA,MAAM,CAACC,QAAP,GAAkB,wBAAlB;AAED;;AACD,MAAG,CAACP,UAAU,CAACQ,QAAf,EAAwB;AACtBF,IAAAA,MAAM,CAACE,QAAP,GAAkB,wBAAlB;AACD;;AAED,SAAOF,MAAP;AACD,CAZD;;AAcC,IAAMG,IAAI,GAAGxB,SAAS,CAAC;AACpBwB,EAAAA,IAAI,EAAE,WADc;AAEpBJ,EAAAA,QAAQ,EAARA;AAFoB,CAAD,CAAT,CAGTjB,MAHS,CAAb;AAKC,eAAeD,OAAO,CAAC,IAAD,EAAM;AAACD,EAAAA,MAAM,EAANA;AAAD,CAAN,CAAP,CAAuBuB,IAAvB,CAAf","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport {signIn} from '../../actions'\nimport { connect } from 'react-redux'\n\n\nclass SignIn extends React.Component {\n\n  renderError({error,touched}){\n    if(touched && error){\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      );\n    }\n  }\n\n renderField = ({input,Type, label,meta,placeholder}) => {\n  const className= `field ${meta.error && meta.touched ? 'error' : '' }`;\n  return (\n    <div className={className}>\n      <label>\n        {label}\n      </label>\n      <input {...input}  type={Type} holder ={placeholder} autoComplete=\"off\"/>\n      {this.renderError(meta)}\n    </div>\n  )\n}\n\n\nonSubmit = formValues => {\n  this.props.signIn(formValues);\n}\n\n\n  render () {\n    if(!localStorage.getItem(\"authToken\")){\n\n    }\n    \n  }\n}\n\n\nconst validate = formValues => {\n  const errors = {};\n  \n  if(!formValues.username){\n    errors.username = \"must enter username!!!\";\n    \n  }\n  if(!formValues.password){\n    errors.password = \"must enter password!!!\";\n  }\n\n  return errors;\n};\n\n const form = reduxForm({\n    form: 'loginForm',\n    validate\n  })(SignIn);\n\n  export default connect(null,{signIn})(form);\n\n"]},"metadata":{},"sourceType":"module"}