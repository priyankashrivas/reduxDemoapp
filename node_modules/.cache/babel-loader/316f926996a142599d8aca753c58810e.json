{"ast":null,"code":"import _classCallCheck from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/priyanka/task/myapp/src/components/user/SignIn.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { signIn } from '../../actions';\nimport { connect } from 'react-redux';\n\nvar SignIn =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignIn, _React$Component);\n\n  function SignIn() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignIn);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignIn)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderLoginForm = function (_ref) {\n      var input = _ref.input,\n          idLable = _ref.idLable,\n          inputType = _ref.inputType,\n          label = _ref.label,\n          meta = _ref.meta,\n          placeholder = _ref.placeholder;\n      var className = \"field \".concat(meta.error && meta.touched ? 'error' : '');\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        id: idLable,\n        type: inputType,\n        holder: placeholder,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      })), _this.renderError(meta));\n    };\n\n    _this.onSubmit = function (formValues) {\n      _this.props.SignIn(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(SignIn, [{\n    key: \"renderError\",\n    value: function renderError(_ref2) {\n      var error = _ref2.error,\n          touched = _ref2.touched;\n\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          className: \"ui error message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, error));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui md row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Login Here\"))), React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        className: \"ui form error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Field, {\n        inputType: \"text\",\n        name: \"username\",\n        component: this.renderLoginForm,\n        idLable: \"username\",\n        label: \"Username\",\n        placeholder: \"Enter username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Field, {\n        inputType: \"password\",\n        name: \"password\",\n        component: this.renderLoginForm,\n        idLable: \"psw\",\n        label: \"Password\",\n        placeholder: \"Enter Password\",\n        pattern: \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\",\n        title: \"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return SignIn;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.username) {\n    errors.username = \"no username!!!\";\n  }\n  /* let limitLength = formValues.username.length;\n  if(limitLength){\n    errors.username = \"less than defiened limit\";\n  }\n  */\n\n\n  if (!formValues.password) {\n    errors.password = \"no password!!!\";\n  }\n\n  return errors;\n};\n\nvar loginRedux = reduxForm({\n  form: 'loginForm',\n  validate: validate\n})(SignIn);\nexport default connect(null, {\n  signIn: signIn\n})(loginRedux);","map":{"version":3,"sources":["/home/priyanka/task/myapp/src/components/user/SignIn.js"],"names":["React","Field","reduxForm","signIn","connect","SignIn","renderLoginForm","input","idLable","inputType","label","meta","placeholder","className","error","touched","renderError","onSubmit","formValues","props","handleSubmit","Component","validate","errors","username","password","loginRedux","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport {signIn} from '../../actions'\nimport { connect } from 'react-redux'\n\nclass SignIn extends React.Component {\n\n  renderError({error,touched}){\n    if(touched && error){\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      );\n    }\n  }\n\n renderLoginForm = ({input,idLable,inputType, label,meta,placeholder}) => {\n  const className= `field ${meta.error && meta.touched ? 'error' : '' }`;\n  return (\n    <div className={className}>\n      <label>\n        {label}\n      </label>\n      <input {...input} id={idLable} type={inputType} holder ={placeholder}autoComplete=\"off\"/>\n      {this.renderError(meta)}\n    </div>\n  )\n}\n\n\nonSubmit = formValues => {\n  this.props.SignIn(formValues);\n}\n\n\n  render () {\n    return (\n      <div>\n        <div className='ui md row'>\n          <center><h2>Login Here</h2></center>\n        </div>\n        \n        <form onSubmit={this.props.handleSubmit(this.onSubmit)} className='ui form error'>\n         <Field \n          inputType='text'\n          name='username'\n          component={this.renderLoginForm}\n          idLable='username'\n          label='Username'\n          placeholder ='Enter username'\n        />\n        <Field \n          inputType='password' \n          name='password' \n          component={this.renderLoginForm} \n          idLable='psw' \n          label='Password'\n          placeholder ='Enter Password'\n          pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\"\n          title=\"Must contain at least one number and one uppercase and\n            lowercase letter, and at least 8 or more characters\"\n        />\n        <button className=\"ui button primary\" >Submit</button>\n      </form>\n      </div>      \n    )\n  }\n}\n\n\nconst validate = formValues => {\n  const errors = {};\n  \n  if(!formValues.username){\n    errors.username = \"no username!!!\";\n    \n  }\n  /* let limitLength = formValues.username.length;\n  if(limitLength){\n    errors.username = \"less than defiened limit\";\n  }\n */\n  if(!formValues.password){\n    errors.password = \"no password!!!\";\n  }\n\n  return errors;\n};\n\n const loginRedux = reduxForm({\n    form: 'loginForm',\n    validate\n  })(SignIn);\n\n  export default connect(null,{signIn})(loginRedux);\n\n"]},"metadata":{},"sourceType":"module"}