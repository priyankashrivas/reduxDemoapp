{"ast":null,"code":"import _regeneratorRuntime from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from '../apis/axios';\nimport axios1 from '../apis/axios1';\nimport history from \"../history\";\nimport { toastr } from 'react-redux-toastr';\nimport { POST_LIST, EDIT_POST, DELETE_POST, FETCH_USER } from './types'; //function will show the success or warning\n\nvar toastrSuccess = function toastrSuccess(title, msg) {\n  return toastr.success(title, msg);\n};\n\nvar toastrFailure = function toastrFailure(title, msg) {\n  return toastr.error(title, msg);\n}; //login action creator\n\n\nexport var signIn = function signIn(formValues) {\n  return (\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.post('jwt-auth/v1/token', _objectSpread({}, formValues));\n\n            case 3:\n              response = _context.sent;\n              //console.log(response.data)\n              toastrSuccess(\"Successfully signin\", \"\".concat(formValues.username)); //It will set the currently logged in user data on localstorage\n\n              localStorage.setItem(\"validToken\", response.data.token);\n              localStorage.setItem(\"userId\", response.data.user_id); //console.log(localStorage.getItem(\"userId\"));\n\n              localStorage.setItem(\"userName\", response.data.user_display_name); //console.log(localStorage.getItem(\"validToken\"))\n\n              history.push('/post/list');\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              toastrFailure(\" Enter valid data\", \"\".concat(formValues.username));\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }))\n  );\n}; //............................................................................................\n//redister user action creator\n\nexport var signUp = function signUp(formValues) {\n  return (\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.post('wp/v2/users/register', _objectSpread({}, formValues));\n\n            case 3:\n              response = _context2.sent;\n              console.log(response.data);\n              toastrSuccess(\"Successfully registered\", \"\".concat(formValues.username));\n              history.push('/user/login');\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              toastrFailure(\"Already exists\", \"\".concat(formValues.username));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }))\n  );\n}; //...........................................................................................\n//update user profile action creator\n\nexport var updateUser = function updateUser(formValues) {\n  return (\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return axios.post('/wp/v2/users/register', _objectSpread({}, formValues));\n\n            case 2:\n              response = _context3.sent;\n              console.log(response.data.message);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))\n  );\n}; //..........................................................................................\n//fetch user detail action creator\n\nexport var veiwUser = function veiwUser(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return axios.put(\"wp/v2/users/\".concat(id));\n\n              case 3:\n                response = _context4.sent;\n                console.log(response.data);\n                dispatch({\n                  type: FETCH_USER,\n                  payload: response.data\n                });\n                _context4.next = 11;\n                break;\n\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4[\"catch\"](0);\n                toastrFailure(\"User Details\", \"User Data Not Found\");\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n}; //........................................................................................\n//show all post action creator\n\nexport var postList = function postList() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return axios.get('/wp/v2/posts?orderby=id');\n\n              case 3:\n                response = _context5.sent;\n                //console.log(response.data ,'actions');\n                dispatch({\n                  type: POST_LIST,\n                  payload: response.data\n                });\n                _context5.next = 10;\n                break;\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5[\"catch\"](0);\n                toastrFailure(\"something went wrong \", \"\");\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 7]]);\n      }));\n\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n}; //............................................................................................\n//Create your own post action creator\n\nexport var postCreate = function postCreate(formValues) {\n  return (\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return axios1.post('/wp/v2/posts', _objectSpread({}, formValues));\n\n            case 3:\n              response = _context6.sent;\n              console.log(response.data);\n              toastrSuccess(\"Successfully created\", \"\".concat(formValues.title));\n              history.push('/post/list');\n              _context6.next = 12;\n              break;\n\n            case 9:\n              _context6.prev = 9;\n              _context6.t0 = _context6[\"catch\"](0);\n              toastrFailure(\"Try again\", \"\".concat(formValues.title));\n\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 9]]);\n    }))\n  );\n}; //Edit your own post action creator\n\nexport var editPost = function editPost(id, formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                _context7.next = 3;\n                return axios1.post(\"/wp/v2/posts/\".concat(id), formValues);\n\n              case 3:\n                response = _context7.sent;\n                //console.log(response.data)\n                toastrSuccess(\"Your post is Successfully updated \", \"\".concat(formValues.title));\n                dispatch({\n                  type: EDIT_POST,\n                  payload: response.data\n                });\n                history.push('/post/list');\n                _context7.next = 12;\n                break;\n\n              case 9:\n                _context7.prev = 9;\n                _context7.t0 = _context7[\"catch\"](0);\n                toastrFailure(\"Try again\");\n\n              case 12:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[0, 9]]);\n      }));\n\n      return function (_x3) {\n        return _ref7.apply(this, arguments);\n      };\n    }()\n  );\n}; //.........................................................................................\n// Delete your own post action creator\n\nexport var deletePost = function deletePost(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref8 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                _context8.next = 3;\n                return axios1.delete(\"/wp/v2/posts/\".concat(id));\n\n              case 3:\n                dispatch({\n                  type: DELETE_POST,\n                  payload: id\n                });\n                toastrSuccess(\"Your post is Successfully deleted \");\n                history.push('/post/list');\n                _context8.next = 12;\n                break;\n\n              case 8:\n                _context8.prev = 8;\n                _context8.t0 = _context8[\"catch\"](0);\n                toastrFailure(\"Error\", \"post is not deleted\");\n                history.push('/post/list');\n\n              case 12:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[0, 8]]);\n      }));\n\n      return function (_x4) {\n        return _ref8.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/priyanka/task/myapp/src/actions/index.js"],"names":["axios","axios1","history","toastr","POST_LIST","EDIT_POST","DELETE_POST","FETCH_USER","toastrSuccess","title","msg","success","toastrFailure","error","signIn","formValues","post","response","username","localStorage","setItem","data","token","user_id","user_display_name","push","signUp","console","log","updateUser","message","veiwUser","id","dispatch","put","type","payload","postList","get","postCreate","editPost","deletePost","delete"],"mappings":"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","sourcesContent":["import  axios from '../apis/axios'\nimport axios1 from '../apis/axios1'\nimport history from \"../history\"\nimport {toastr} from 'react-redux-toastr'\nimport {POST_LIST , EDIT_POST , DELETE_POST ,FETCH_USER} from './types'\n\n\n//function will show the success or warning\nconst toastrSuccess = (title,msg) => toastr.success(title,msg)\nconst toastrFailure = (title,msg) => toastr.error(title,msg) \n\n//login action creator\nexport const signIn = formValues => async () => {\n    try{\n      const response  = await axios.post('jwt-auth/v1/token',{...formValues});\n      //console.log(response.data)\n      \n      toastrSuccess(`Successfully signin`,`${formValues.username}`)\n      \n      //It will set the currently logged in user data on localstorage\n      localStorage.setItem(\"validToken\", response.data.token);\n      localStorage.setItem(\"userId\", response.data.user_id);\n      //console.log(localStorage.getItem(\"userId\"));\n      localStorage.setItem(\"userName\", response.data.user_display_name);    \n      //console.log(localStorage.getItem(\"validToken\"))\n      history.push('/post/list'); \n    }\n    catch(error){\n      toastrFailure(` Enter valid data`,`${formValues.username}`);\n    }     \n  };\n//............................................................................................\n\n//redister user action creator\n  export const signUp = formValues => async () => {\n    try{\n      const response  = await axios.post('wp/v2/users/register',{...formValues});\n      console.log(response.data)\n      toastrSuccess(`Successfully registered`,`${formValues.username}`)\n      history.push('/user/login'); \n    }\n    catch(error){\n      toastrFailure(`Already exists`,`${formValues.username}`);\n    }   \n  };\n//...........................................................................................\n  \n\n//update user profile action creator\n  \nexport const updateUser = formValues => async () => {\n    //console.log(formValues);\n    const response  = await axios.post('/wp/v2/users/register',{...formValues});\n    console.log(response.data.message);\n  };\n\n//..........................................................................................\n\n//fetch user detail action creator\n\nexport const veiwUser = id => async (dispatch) => {\n  try{\n    const response  = await axios.put(`wp/v2/users/${id}`);\n    console.log(response.data);\n    dispatch({type: FETCH_USER,payload: response.data})\n  }catch(error){\n    toastrFailure(`User Details`,`User Data Not Found`);\n  }  \n};\n//........................................................................................\n\n//show all post action creator\n\n  export const postList = () => async (dispatch) => {\n    try{\n        //console.log(header);      \n        const response =await axios.get('/wp/v2/posts?orderby=id');\n        //console.log(response.data ,'actions');\n        dispatch ({type: POST_LIST ,payload: response.data});\n    }catch(error){\n      toastrFailure(`something went wrong `,``);\n    }\n    \n  };\n//............................................................................................\n\n//Create your own post action creator\n\n  export const postCreate = formValues => async () => {\n    try{\n      //console.log(formValues)\n      const response  = await axios1.post('/wp/v2/posts',{...formValues});\n      console.log(response.data);\n      toastrSuccess(`Successfully created`,`${formValues.title}`)\n      history.push('/post/list');\n    }catch(error){\n      toastrFailure(`Try again`,`${formValues.title}`);\n    } \n  };\n\n//Edit your own post action creator\n\nexport const editPost = (id,formValues)=> async (dispatch) => {\n  try{\n    const response  = await axios1.post(`/wp/v2/posts/${id}`,formValues);\n    //console.log(response.data)\n    toastrSuccess(`Your post is Successfully updated `,`${formValues.title}`);\n    \n    dispatch({type: EDIT_POST, payload: response.data})\n    history.push('/post/list')\n  }catch(error){\n    toastrFailure(`Try again`);\n  }  \n};\n//.........................................................................................\n\n// Delete your own post action creator\n\nexport const deletePost = (id)=> async (dispatch) => {\n  try{\n    await axios1.delete(`/wp/v2/posts/${id}`);\n    dispatch({type: DELETE_POST, payload: id})\n    toastrSuccess(`Your post is Successfully deleted `);\n    history.push('/post/list'); \n  }catch(error){\n    toastrFailure(`Error`,`post is not deleted`);\n    history.push('/post/list'); \n  }  \n};\n\n"]},"metadata":{},"sourceType":"module"}