{"ast":null,"code":"import _classCallCheck from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/priyanka/task/myapp/src/components/userpost/PostEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { editPost } from '../../actions';\nimport PostForm from './PostForm';\nimport history from '../../history';\nimport _ from 'lodash';\n\nvar PostEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostEdit, _React$Component);\n\n  function PostEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValues) {\n      console.log(formValues);\n\n      _this.props.editPost(_this.props.match.params.id, formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(PostEdit, [{\n    key: \"renderPost\",\n    value: function renderPost() {\n      this.values = {\n        title: this.props.post.title.rendered,\n        content: this.props.post.content.rendered,\n        status: this.props.post.status\n      };\n\n      if (localStorage.getItem(\"validToken\")) {\n        if (this.props.post === undefined) {\n          return history.push('/');\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, React.createElement(\"center\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, \" \", React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, \"Edit post\")), React.createElement(PostForm, {\n            initialValues: _pick,\n            onSubmit: this.onSubmit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }));\n        }\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, history.push('/'));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.renderPost());\n    }\n  }]);\n\n  return PostEdit;\n}(React.Component);\n\nvar mapstateToProps = function mapstateToProps(state, ownProps) {\n  return {\n    post: state.posts[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapstateToProps, {\n  editPost: editPost\n})(PostEdit);","map":{"version":3,"sources":["/home/priyanka/task/myapp/src/components/userpost/PostEdit.js"],"names":["React","connect","editPost","PostForm","history","_","PostEdit","onSubmit","formValues","console","log","props","match","params","id","values","title","post","rendered","content","status","localStorage","getItem","undefined","push","_pick","renderPost","Component","mapstateToProps","state","ownProps","posts"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,CAAP,MAAc,QAAd;;IAEMC,Q;;;;;;;;;;;;;;;;;;UAEFC,Q,GAAW,UAACC,UAAD,EAAgB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AACD,YAAKG,KAAL,CAAWT,QAAX,CAAoB,MAAKS,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5C,EAA+CN,UAA/C;AACF,K;;;;;;;iCAEY;AACT,WAAKO,MAAL,GAAY;AACRC,QAAAA,KAAK,EAAC,KAAKL,KAAL,CAAWM,IAAX,CAAgBD,KAAhB,CAAsBE,QADpB;AAERC,QAAAA,OAAO,EAAC,KAAKR,KAAL,CAAWM,IAAX,CAAgBE,OAAhB,CAAwBD,QAFxB;AAGRE,QAAAA,MAAM,EAAC,KAAKT,KAAL,CAAWM,IAAX,CAAgBG;AAHf,OAAZ;;AAKA,UAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAH,EAAuC;AACnC,YAAI,KAAKX,KAAL,CAAWM,IAAX,KAAoBM,SAAxB,EAAoC;AAChC,iBACCnB,OAAO,CAACoB,IAAR,CAAa,GAAb,CADD;AAGH,SAJD,MAIM;AAEF,iBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAT,CADA,EAEA,oBAAC,QAAD;AACA,YAAA,aAAa,EAAEC,KADf;AAEA,YAAA,QAAQ,EAAG,KAAKlB,QAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,CADJ;AAQH;AAEJ,OAjBD,MAiBO;AACH,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMH,OAAO,CAACoB,IAAR,CAAa,GAAb,CAAN,CAAP;AACH;AACJ;;;6BAEO;AACJ,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKE,UAAL,EAAN,CAAP;AACH;;;;EArCkB1B,KAAK,CAAC2B,S;;AAwC7B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAmB;AAEvC,SAAO;AAACb,IAAAA,IAAI,EAAGY,KAAK,CAACE,KAAN,CAAYD,QAAQ,CAAClB,KAAT,CAAeC,MAAf,CAAsBC,EAAlC;AAAR,GAAP;AACH,CAHD;;AAKA,eAAeb,OAAO,CAClB2B,eADkB,EAElB;AAAE1B,EAAAA,QAAQ,EAARA;AAAF,CAFkB,CAAP,CAGbI,QAHa,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { editPost } from '../../actions';\nimport PostForm from './PostForm';\nimport history from '../../history'\nimport _ from 'lodash'\n\nclass PostEdit extends React.Component {\n    \n    onSubmit = (formValues) => {\n        console.log(formValues);\n       this.props.editPost(this.props.match.params.id,formValues);\n    };\n\n    renderPost() {\n        this.values={\n            title:this.props.post.title.rendered,\n            content:this.props.post.content.rendered,\n            status:this.props.post.status\n        }\n        if(localStorage.getItem(\"validToken\")) {\n            if((this.props.post === undefined) ){\n                return (\n                 history.push('/')\n                )\n            }else {\n\n                return (\n                    <div>\n                    <center> <h2>Edit post</h2></center>\n                    <PostForm \n                    initialValues={_pick}\n                    onSubmit ={this.onSubmit}/>\n                    </div>\n                );\n            }\n            \n        } else {\n            return <div>{history.push('/')}</div>\n        } \n    }\n    \n    render(){\n        return <div>{this.renderPost()}</div>\n    }\n}\n\nconst mapstateToProps = (state ,ownProps)=>{\n\n    return {post : state.posts[ownProps.match.params.id]};\n};\n\nexport default connect(\n    mapstateToProps ,\n    { editPost}\n)(PostEdit);"]},"metadata":{},"sourceType":"module"}