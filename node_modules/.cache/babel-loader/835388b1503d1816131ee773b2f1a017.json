{"ast":null,"code":"import _classCallCheck from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/priyanka/task/myapp/src/components/userpost/PostEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { postList, editPost } from '../../actions';\nimport PostForm from './PostForm';\nimport history from '../../history';\n\nvar PostEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostEdit, _React$Component);\n\n  function PostEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValues) {\n      console.log(formValues);\n\n      _this.props.editPost(_this.props.match.params.id, formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(PostEdit, [{\n    key: \"renderEditContent\",\n    value: function renderEditContent() {\n      if (!this.props.stream) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, history.pushState('/'));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, \"Edit a stream\")), React.createElement(PostForm, {\n          initialValues: {\n            title: this.props.post.title.rendered,\n            content: this.props.post.content.rendered,\n            status: this.props.post.status\n          },\n          onSubmit: this.onSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.renderEditContent);\n    }\n  }]);\n\n  return PostEdit;\n}(React.Component);\n\nvar mapstateToProps = function mapstateToProps(state, ownProps) {\n  return {\n    post: state.posts[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapstateToProps, {\n  postList: postList,\n  editPost: editPost\n})(PostEdit);","map":{"version":3,"sources":["/home/priyanka/task/myapp/src/components/userpost/PostEdit.js"],"names":["React","connect","postList","editPost","PostForm","history","PostEdit","onSubmit","formValues","console","log","props","match","params","id","stream","pushState","title","post","rendered","content","status","renderEditContent","Component","mapstateToProps","state","ownProps","posts"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,EAAkBC,QAAlB,QAAkC,eAAlC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,eAApB;;IAEMC,Q;;;;;;;;;;;;;;;;;;UAEFC,Q,GAAW,UAACC,UAAD,EAAgB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AACD,YAAKG,KAAL,CAAWR,QAAX,CAAoB,MAAKQ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5C,EAA+CN,UAA/C;AACF,K;;;;;;;wCAEkB;AACf,UAAG,CAAC,KAAKG,KAAL,CAAWI,MAAf,EAAsB;AAClB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMV,OAAO,CAACW,SAAR,CAAkB,GAAlB,CAAN,CAAP;AACH,OAFD,MAGK;AACD,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAR,CADJ,EAEQ,oBAAC,QAAD;AACI,UAAA,aAAa,EAAE;AACXC,YAAAA,KAAK,EAAC,KAAKN,KAAL,CAAWO,IAAX,CAAgBD,KAAhB,CAAsBE,QADjB;AAEXC,YAAAA,OAAO,EAAC,KAAKT,KAAL,CAAWO,IAAX,CAAgBE,OAAhB,CAAwBD,QAFrB;AAGXE,YAAAA,MAAM,EAAC,KAAKV,KAAL,CAAWO,IAAX,CAAgBG;AAHZ,WADnB;AAMI,UAAA,QAAQ,EAAI,KAAKd,QANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR,CADJ;AAaH;AAGJ;;;6BAEO;AACH,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKe,iBAAX,CAAP;AACJ;;;;EAhCkBtB,KAAK,CAACuB,S;;AAoC7B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAmB;AAEvC,SAAO;AAACR,IAAAA,IAAI,EAAGO,KAAK,CAACE,KAAN,CAAYD,QAAQ,CAACd,KAAT,CAAeC,MAAf,CAAsBC,EAAlC;AAAR,GAAP;AACH,CAHD;;AAKA,eAAeb,OAAO,CAClBuB,eADkB,EAElB;AAAEtB,EAAAA,QAAQ,EAARA,QAAF;AAAYC,EAAAA,QAAQ,EAARA;AAAZ,CAFkB,CAAP,CAGbG,QAHa,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {postList ,editPost } from '../../actions';\nimport PostForm from './PostForm';\nimport history from '../../history'\n\nclass PostEdit extends React.Component {\n    \n    onSubmit = (formValues) => {\n        console.log(formValues);\n       this.props.editPost(this.props.match.params.id,formValues);\n    };\n\n    renderEditContent(){\n        if(!this.props.stream){\n            return <div>{history.pushState('/')}</div>\n        }\n        else {\n            return (\n                <div>\n                    <center><h3>Edit a stream</h3></center>\n                        <PostForm \n                            initialValues={{\n                                title:this.props.post.title.rendered,\n                                content:this.props.post.content.rendered,\n                                status:this.props.post.status\n                            }} \n                            onSubmit = {this.onSubmit}   \n                        />\n                </div>\n            );\n        }\n        \n        \n    }\n\n    render(){\n         return <div>{this.renderEditContent}</div>   \n    }\n    \n}\n\nconst mapstateToProps = (state ,ownProps)=>{\n\n    return {post : state.posts[ownProps.match.params.id]};\n};\n\nexport default connect(\n    mapstateToProps ,\n    { postList ,editPost}\n)(PostEdit);"]},"metadata":{},"sourceType":"module"}