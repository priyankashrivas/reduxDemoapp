{"ast":null,"code":"import _classCallCheck from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/priyanka/task/myapp/src/components/user/SignIn.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { signIn } from '../../actions';\nimport { connect } from 'react-redux';\nimport history from '../../history'; //import PasswordMask from 'react-password-mask';\n\nvar SignIn =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignIn, _React$Component);\n\n  function SignIn() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignIn);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignIn)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderField = function (_ref) {\n      var input = _ref.input,\n          Type = _ref.Type,\n          label = _ref.label,\n          meta = _ref.meta;\n      var className = \"field \".concat(meta.error && meta.touched ? 'error' : '');\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        type: Type,\n        placeholder: label,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })), _this.renderError(meta));\n    };\n\n    _this.onSubmit = function (formValues) {\n      _this.props.signIn(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(SignIn, [{\n    key: \"renderError\",\n    value: function renderError(_ref2) {\n      var error = _ref2.error,\n          touched = _ref2.touched;\n\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          className: \"ui error message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, error));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!localStorage.getItem(\"validToken\")) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Login Here\")), React.createElement(\"form\", {\n          onSubmit: this.props.handleSubmit(this.onSubmit),\n          className: \"ui form error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(Field, {\n          Type: \"text\",\n          name: \"username\",\n          component: this.renderField,\n          label: \"Username\",\n          placeholder: \"enter username\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }), React.createElement(Field, {\n          Type: \"password\",\n          name: \"password\",\n          component: this.renderField,\n          label: \"Password\",\n          placeholder: \"enter password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"ui button primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Submit\")));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, history.push('/'));\n      }\n    }\n  }]);\n\n  return SignIn;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.username) {\n    errors.username = \"must enter username!!!\";\n  } else if (formValues.username.length > 30) {\n    errors.username = 'Max length is 30 character';\n  }\n\n  if (!formValues.password) {\n    errors.password = \"must enter password!!!\";\n  } else if (formValues.password.length > 6 && formValues.password.length < 8) {\n    errors.password = 'Minimum length is 6  and maximum is 8 character';\n  }\n\n  if (!/[^a-zA-Z0-9 ]/i.test(formValues.password)) {\n    errors.username = 'Only Alfanumeric value will aceepted';\n  }\n\n  return errors;\n};\n\nvar form = reduxForm({\n  form: 'loginForm',\n  validate: validate\n})(SignIn);\nexport default connect(null, {\n  signIn: signIn\n})(form);","map":{"version":3,"sources":["/home/priyanka/task/myapp/src/components/user/SignIn.js"],"names":["React","Field","reduxForm","signIn","connect","history","SignIn","renderField","input","Type","label","meta","className","error","touched","renderError","onSubmit","formValues","props","localStorage","getItem","handleSubmit","push","Component","validate","errors","username","length","password","test","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAAQC,MAAR,QAAqB,eAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,eAApB,C,CACA;;IAGMC,M;;;;;;;;;;;;;;;;;;UAYLC,W,GAAc,gBAA8B;AAAA,UAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,UAAtBC,IAAsB,QAAtBA,IAAsB;AAAA,UAAhBC,KAAgB,QAAhBA,KAAgB;AAAA,UAAVC,IAAU,QAAVA,IAAU;AAC3C,UAAMC,SAAS,mBAAWD,IAAI,CAACE,KAAL,IAAcF,IAAI,CAACG,OAAnB,GAA6B,OAA7B,GAAuC,EAAlD,CAAf;AACA,aACE;AAAK,QAAA,SAAS,EAAEF,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,KADH,CADF,EAIE,+CAAWF,KAAX;AAAmB,QAAA,IAAI,EAAEC,IAAzB;AAA+B,QAAA,WAAW,EAAEC,KAA5C;AAAmD,QAAA,YAAY,EAAC,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,EAKG,MAAKK,WAAL,CAAiBJ,IAAjB,CALH,CADF;AASD,K;;UAGDK,Q,GAAW,UAAAC,UAAU,EAAI;AACvB,YAAKC,KAAL,CAAWf,MAAX,CAAkBc,UAAlB;AACD,K;;;;;;;uCA1B6B;AAAA,UAAfJ,KAAe,SAAfA,KAAe;AAAA,UAATC,OAAS,SAATA,OAAS;;AAC1B,UAAGA,OAAO,IAAID,KAAd,EAAoB;AAClB,eACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBA,KAAzB,CADF,CADF;AAKD;AACF;;;6BAqBS;AACR,UAAG,CAACM,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAJ,EAAuC;AACrC,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAR,CADJ,EAEE;AAAM,UAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,YAAX,CAAwB,KAAKL,QAA7B,CAAhB;AAAwD,UAAA,SAAS,EAAC,eAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,SAAS,EAAE,KAAKT,WAHlB;AAIE,UAAA,KAAK,EAAC,UAJR;AAKE,UAAA,WAAW,EAAC,gBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAQG,oBAAC,KAAD;AACC,UAAA,IAAI,EAAC,UADN;AAEC,UAAA,IAAI,EAAC,UAFN;AAGC,UAAA,SAAS,EAAE,KAAKA,WAHjB;AAIC,UAAA,KAAK,EAAC,UAJP;AAKC,UAAA,WAAW,EAAE,gBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARH,EAqBE;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBF,CAFF,CADF;AA4BD,OA7BD,MA6BM;AACJ,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMF,OAAO,CAACiB,IAAR,CAAa,GAAb,CAAN,CAAP;AACD;AAEF;;;;EAjEkBtB,KAAK,CAACuB,S;;AAqE3B,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAP,UAAU,EAAI;AAC7B,MAAMQ,MAAM,GAAG,EAAf;;AAEA,MAAG,CAACR,UAAU,CAACS,QAAf,EAAwB;AACtBD,IAAAA,MAAM,CAACC,QAAP,GAAkB,wBAAlB;AACD,GAFD,MAEM,IAAGT,UAAU,CAACS,QAAX,CAAoBC,MAApB,GAA2B,EAA9B,EAAiC;AACrCF,IAAAA,MAAM,CAACC,QAAP,GAAkB,4BAAlB;AACD;;AAED,MAAG,CAACT,UAAU,CAACW,QAAf,EAAwB;AACtBH,IAAAA,MAAM,CAACG,QAAP,GAAkB,wBAAlB;AACD,GAFD,MAEM,IAAGX,UAAU,CAACW,QAAX,CAAoBD,MAApB,GAA2B,CAA3B,IAAgCV,UAAU,CAACW,QAAX,CAAoBD,MAApB,GAA2B,CAA9D,EAAgE;AACpEF,IAAAA,MAAM,CAACG,QAAP,GAAkB,iDAAlB;AACD;;AACD,MAAI,CAAC,iBAAiBC,IAAjB,CAAsBZ,UAAU,CAACW,QAAjC,CAAL,EAAiD;AAC/CH,IAAAA,MAAM,CAACC,QAAP,GAAkB,sCAAlB;AACD;;AAED,SAAOD,MAAP;AACD,CAnBD;;AAqBC,IAAMK,IAAI,GAAG5B,SAAS,CAAC;AACpB4B,EAAAA,IAAI,EAAE,WADc;AAEpBN,EAAAA,QAAQ,EAARA;AAFoB,CAAD,CAAT,CAGTlB,MAHS,CAAb;AAKC,eAAeF,OAAO,CAAC,IAAD,EAAM;AAACD,EAAAA,MAAM,EAANA;AAAD,CAAN,CAAP,CAAuB2B,IAAvB,CAAf","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport {signIn} from '../../actions'\nimport { connect } from 'react-redux'\nimport history from '../../history'\n//import PasswordMask from 'react-password-mask';\n\n\nclass SignIn extends React.Component {\n\n  renderError({error,touched}){\n    if(touched && error){\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      );\n    }\n  }\n\n renderField = ({input,Type, label,meta}) => {\n  const className= `field ${meta.error && meta.touched ? 'error' : '' }`;\n  return (\n    <div className={className}>\n      <label>\n        {label}\n      </label>\n      <input {...input}  type={Type} placeholder={label} autoComplete=\"off\"/>\n      {this.renderError(meta)}\n    </div>\n  )\n}\n\n\nonSubmit = formValues => {\n  this.props.signIn(formValues);\n}\n\n\n  render () {\n    if(!localStorage.getItem(\"validToken\")){\n      return (\n        <div>\n            <center><h2>Login Here</h2></center>\n          <form onSubmit={this.props.handleSubmit(this.onSubmit)} className='ui form error'>\n            <Field \n              Type='text'\n              name='username'\n              component={this.renderField}\n              label='Username'\n              placeholder='enter username'\n            />\n             <Field  \n              Type='password' \n              name='password' \n              component={this.renderField}  \n              label='Password'\n              placeholder ='enter password'\n            />  \n             {/* <PasswordMask\n              Type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter password\"\n              component={this.renderField}\n            />  */}\n            <button className=\"ui button primary\" >Submit</button>\n          </form>\n        </div>      \n      );\n    }else {\n      return <div>{history.push('/')}</div>;\n    }\n    \n  }\n}\n\n\nconst validate = formValues => {\n  const errors = {};\n  \n  if(!formValues.username){\n    errors.username = \"must enter username!!!\";  \n  }else if(formValues.username.length>30){\n    errors.username = 'Max length is 30 character'\n  } \n\n  if(!formValues.password){\n    errors.password = \"must enter password!!!\";\n  }else if(formValues.password.length>6 && formValues.password.length<8){\n    errors.password = 'Minimum length is 6  and maximum is 8 character'\n  } \n  if (!/[^a-zA-Z0-9 ]/i.test(formValues.password)) {\n    errors.username = 'Only Alfanumeric value will aceepted'\n  }\n\n  return errors;\n};\n\n const form = reduxForm({\n    form: 'loginForm',\n    validate\n  })(SignIn);\n\n  export default connect(null,{signIn})(form);\n\n"]},"metadata":{},"sourceType":"module"}