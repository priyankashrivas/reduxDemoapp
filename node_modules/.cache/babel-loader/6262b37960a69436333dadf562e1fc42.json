{"ast":null,"code":"import _classCallCheck from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/priyanka/task/myapp/src/components/userpost/PostEdit.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { postList, editPost } from '../../actions';\nimport PostForm from './StreamForm';\n\nvar StreamEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamEdit, _React$Component);\n\n  function StreamEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValues) {\n      console.log(formValues);\n\n      _this.props.editStream(_this.props.match.params.id, formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.stream) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Edit a stream\"), React.createElement(StreamForm, {\n        initialValues: _.pick(this.props.stream, 'title', 'description'),\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StreamEdit;\n}(React.Component);\n\nvar mapstateToProps = function mapstateToProps(state, ownProps) {\n  //selecting record from state\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapstateToProps, {\n  fetchStream: fetchStream,\n  editStream: editStream\n})(StreamEdit);","map":{"version":3,"sources":["/home/priyanka/task/myapp/src/components/userpost/PostEdit.js"],"names":["React","_","connect","postList","editPost","PostForm","StreamEdit","onSubmit","formValues","console","log","props","editStream","match","params","id","fetchStream","stream","pick","Component","mapstateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,EAAkBC,QAAlB,QAAkC,eAAlC;AACA,OAAOC,QAAP,MAAqB,cAArB;;IAEMC,U;;;;;;;;;;;;;;;;;;UAOFC,Q,GAAW,UAACC,UAAD,EAAgB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AACD,YAAKG,KAAL,CAAWC,UAAX,CAAsB,MAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EAAiDP,UAAjD;AACF,K;;;;;;;wCARkB;AAEf,WAAKG,KAAL,CAAWK,WAAX,CAAuB,KAAKL,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;;6BAOO;AACA,UAAG,CAAC,KAAKJ,KAAL,CAAWM,MAAf,EAAsB;AAClB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,UAAD;AACI,QAAA,aAAa,EAAGhB,CAAC,CAACiB,IAAF,CAAO,KAAKP,KAAL,CAAWM,MAAlB,EAA0B,OAA1B,EAAmC,aAAnC,CADpB;AAEI,QAAA,QAAQ,EAAI,KAAKV,QAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AASH;;;;EAzBoBP,KAAK,CAACmB,S;;AA6B/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAmB;AACvC;AACA,SAAO;AAACL,IAAAA,MAAM,EAAGI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACH,CAHD;;AAKA,eAAeb,OAAO,CAClBkB,eADkB,EAElB;AAAEJ,EAAAA,WAAW,EAAXA,WAAF;AAAeJ,EAAAA,UAAU,EAAVA;AAAf,CAFkB,CAAP,CAGbN,UAHa,CAAf","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport {connect} from 'react-redux';\nimport {postList ,editPost } from '../../actions';\nimport PostForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n    \n    componentDidMount(){\n       \n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    onSubmit = (formValues) => {\n        console.log(formValues);\n       this.props.editStream(this.props.match.params.id,formValues);\n    };\n\n    render(){\n            if(!this.props.stream){\n                return <div>Loading...</div>\n            }\n        return (\n            <div>\n                <h3>Edit a stream</h3>\n                <StreamForm \n                    initialValues ={_.pick(this.props.stream, 'title' ,'description')} \n                    onSubmit = {this.onSubmit}\n                />\n            </div>\n        );\n    }\n    \n}\n\nconst mapstateToProps = (state ,ownProps)=>{\n    //selecting record from state\n    return {stream : state.streams[ownProps.match.params.id]};\n};\n\nexport default connect(\n    mapstateToProps ,\n    { fetchStream ,editStream}\n)(StreamEdit);"]},"metadata":{},"sourceType":"module"}