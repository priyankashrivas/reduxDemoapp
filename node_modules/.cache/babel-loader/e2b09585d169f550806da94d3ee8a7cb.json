{"ast":null,"code":"import _classCallCheck from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/priyanka/task/myapp/src/components/userpost/PostEdit.js\";\nimport React from 'react';\nimport { postList, editPost } from '../../actions';\nimport { connect } from 'react-redux';\nimport PostForm from './PostForm';\nimport history from '../../history';\n\nvar PostEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostEdit, _React$Component);\n\n  function PostEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValues) {\n      _this.props.editPost(_this.props.match.params.id, formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(PostEdit, [{\n    key: \"renderData\",\n    value: function renderData() {\n      if (localStorage.getItem(\"authToken\") && this.props.match.params.id) {\n        if (this.props.post === undefined) {\n          return history.push('/');\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, \"Update post\"), React.createElement(PostForm, {\n            initialValues: {\n              title: this.props.post.title.rendered,\n              content: this.props.post.content.rendered,\n              status: this.props.post.status\n            },\n            onSubmit: this.onSubmit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }));\n        }\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, history.push('/'));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.renderData());\n    }\n  }]);\n\n  return PostEdit;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  console.log(state.posts[ownProps.match.params.id]);\n  return {\n    post: state.posts[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  postList: postList,\n  editPost: editPost\n})(PostEdit);","map":{"version":3,"sources":["/home/priyanka/task/myapp/src/components/userpost/PostEdit.js"],"names":["React","postList","editPost","connect","PostForm","history","PostEdit","onSubmit","formValues","props","match","params","id","localStorage","getItem","post","undefined","push","title","rendered","content","status","renderData","Component","mapStateToProps","state","ownProps","console","log","posts"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAiBC,QAAjB,QAAgC,eAAhC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,eAApB;;IAGMC,Q;;;;;;;;;;;;;;;;;;UAEJC,Q,GAAW,UAAAC,UAAU,EAAI;AACvB,YAAKC,KAAL,CAAWP,QAAX,CAAoB,MAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5C,EAA+CJ,UAA/C;AACD,K;;;;;;;iCAEW;AAEV,UAAGK,YAAY,CAACC,OAAb,CAAqB,WAArB,KAAqC,KAAKL,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhE,EAAmE;AACjE,YAAI,KAAKH,KAAL,CAAWM,IAAX,KAAoBC,SAAxB,EAAoC;AAClC,iBACCX,OAAO,CAACY,IAAR,CAAa,GAAb,CADD;AAGD,SAJD,MAIK;AAEL,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,QAAD;AACE,YAAA,aAAa,EAAE;AACbC,cAAAA,KAAK,EAAC,KAAKT,KAAL,CAAWM,IAAX,CAAgBG,KAAhB,CAAsBC,QADf;AAEbC,cAAAA,OAAO,EAAC,KAAKX,KAAL,CAAWM,IAAX,CAAgBK,OAAhB,CAAwBD,QAFnB;AAGbE,cAAAA,MAAM,EAAC,KAAKZ,KAAL,CAAWM,IAAX,CAAgBM;AAHV,aADjB;AAKO,YAAA,QAAQ,EAAE,KAAKd,QALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF;AAWC;AACD,OAnBF,MAoBM;AACF,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCF,OAAO,CAACY,IAAR,CAAa,GAAb,CADD,CADF;AAKD;AACJ;;;6BACS;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKK,UAAL,EADD,CADF;AAKA;;;;EA1CmBtB,KAAK,CAACuB,S;;AA6C7B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAOC,QAAP,EAAoB;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,KAAN,CAAYH,QAAQ,CAAChB,KAAT,CAAeC,MAAf,CAAsBC,EAAlC,CAAZ;AACA,SAAO;AACLG,IAAAA,IAAI,EAACU,KAAK,CAACI,KAAN,CAAYH,QAAQ,CAAChB,KAAT,CAAeC,MAAf,CAAsBC,EAAlC;AADA,GAAP;AAGD,CALD;;AAMA,eAAeT,OAAO,CAACqB,eAAD,EAAiB;AAACvB,EAAAA,QAAQ,EAARA,QAAD;AAAUC,EAAAA,QAAQ,EAARA;AAAV,CAAjB,CAAP,CAA6CI,QAA7C,CAAf","sourcesContent":["import React from 'react'\nimport {postList,editPost} from '../../actions'\nimport {connect} from 'react-redux'\nimport PostForm from './PostForm';\nimport history from '../../history'\n\n\nclass PostEdit extends React.Component {\n\n  onSubmit = formValues => {\n    this.props.editPost(this.props.match.params.id,formValues);\n  }\n\n  renderData(){\n   \n    if(localStorage.getItem(\"authToken\") && this.props.match.params.id){\n      if((this.props.post === undefined) ){\n        return (\n         history.push('/')\n        )\n      }else{\n\n      return (\n        <div>\n          <h3>Update post</h3>\n          <PostForm \n            initialValues={{\n              title:this.props.post.title.rendered,\n              content:this.props.post.content.rendered,\n              status:this.props.post.status\n              }} onSubmit={this.onSubmit} />\n        </div>      \n      )\n      }\n     }\n      else{\n        return(\n          <div>\n          {history.push('/')}\n          </div>\n        )\n      }\n  }\n  render () {\n    return(\n      <div>\n      {this.renderData()}\n      </div>\n      )\n   }\n}\n\nconst mapStateToProps = (state,ownProps) => {\n  console.log(state.posts[ownProps.match.params.id])\n  return {\n    post:state.posts[ownProps.match.params.id]\n  }\n}\nexport default connect(mapStateToProps,{postList,editPost})(PostEdit)"]},"metadata":{},"sourceType":"module"}