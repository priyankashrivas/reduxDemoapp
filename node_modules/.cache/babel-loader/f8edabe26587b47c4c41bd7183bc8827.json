{"ast":null,"code":"import _classCallCheck from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/priyanka/task/myapp/src/components/userpost/PostEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { editPost } from '../../actions';\nimport PostForm from './PostForm';\nimport history from '../../history';\n\nvar PostEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostEdit, _React$Component);\n\n  function PostEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValues) {\n      //console.log(formValues);\n      _this.props.editPost(_this.props.match.params.id, formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(PostEdit, [{\n    key: \"renderPost\",\n    value: function renderPost() {\n      //console.log(this.props.match.params.id)\n      if (localStorage.getItem(\"validToken\") && this.props.match.params.id) {\n        console.log(this.props.posts, 'render method');\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \" \", React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \"Edit post\")), React.createElement(PostForm, {\n          onSubmit: this.onSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, history.push('/'));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.renderPost());\n    }\n  }]);\n\n  return PostEdit;\n}(React.Component);\n\nvar mapstateToProps = function mapstateToProps(_ref, ownProps) {\n  var posts = _ref.posts;\n  //console.log(state.post[ownProps.match.params.id],'gjhghg')\n  console.log(state.posts, 'mapstatetoprops');\n  return {\n    posts: posts[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapstateToProps, {\n  editPost: editPost\n})(PostEdit);","map":{"version":3,"sources":["/home/priyanka/task/myapp/src/components/userpost/PostEdit.js"],"names":["React","connect","editPost","PostForm","history","PostEdit","onSubmit","formValues","props","match","params","id","localStorage","getItem","console","log","posts","push","renderPost","Component","mapstateToProps","ownProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,eAApB;;IAGMC,Q;;;;;;;;;;;;;;;;;;UAEFC,Q,GAAW,UAACC,UAAD,EAAgB;AACvB;AACA,YAAKC,KAAL,CAAWN,QAAX,CAAoB,MAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5C,EAAgDJ,UAAhD;AACH,K;;;;;;;iCAEY;AACT;AAEA,UAAIK,YAAY,CAACC,OAAb,CAAqB,YAArB,KAAsC,KAAKL,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAlE,EAAsE;AAClEG,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWQ,KAAvB,EAA8B,eAA9B;AACA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAT,CADJ,EAEI,oBAAC,QAAD;AACI,UAAA,QAAQ,EAAE,KAAKV,QADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ;AAQH,OAVD,MAUO;AACH,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMF,OAAO,CAACa,IAAR,CAAa,GAAb,CAAN,CAAP;AACH;AACJ;;;6BAEQ;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKC,UAAL,EAAN,CADJ;AAGH;;;;EA9BkBlB,KAAK,CAACmB,S;;AAiC7B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAUC,QAAV,EAAuB;AAAA,MAArBL,KAAqB,QAArBA,KAAqB;AAC3C;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYO,KAAK,CAACN,KAAlB,EAAwB,iBAAxB;AACA,SAAO;AAAEA,IAAAA,KAAK,EAAEA,KAAK,CAACK,QAAQ,CAACZ,KAAT,CAAeC,MAAf,CAAsBC,EAAvB;AAAd,GAAP;AACH,CAJD;;AAMA,eAAeV,OAAO,CAClBmB,eADkB,EAElB;AAAElB,EAAAA,QAAQ,EAARA;AAAF,CAFkB,CAAP,CAGbG,QAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { editPost } from '../../actions';\nimport PostForm from './PostForm';\nimport history from '../../history'\n\n\nclass PostEdit extends React.Component {\n\n    onSubmit = (formValues) => {\n        //console.log(formValues);\n        this.props.editPost(this.props.match.params.id, formValues);\n    };\n\n    renderPost() {\n        //console.log(this.props.match.params.id)\n\n        if (localStorage.getItem(\"validToken\") && this.props.match.params.id) {\n            console.log(this.props.posts, 'render method');\n            return (\n                <div>\n                    <center> <h2>Edit post</h2></center>\n                    <PostForm\n                        onSubmit={this.onSubmit} />\n                </div>\n            );\n\n        } else {\n            return <div>{history.push('/')}</div>\n        }\n    }\n\n    render() {\n\n        return (\n            <div>{this.renderPost()}</div>\n        );\n    }\n}\n\nconst mapstateToProps = ({posts}, ownProps) => {\n    //console.log(state.post[ownProps.match.params.id],'gjhghg')\n    console.log(state.posts,'mapstatetoprops');\n    return { posts: posts[ownProps.match.params.id] };\n};\n\nexport default connect(\n    mapstateToProps,\n    { editPost }\n)(PostEdit);"]},"metadata":{},"sourceType":"module"}