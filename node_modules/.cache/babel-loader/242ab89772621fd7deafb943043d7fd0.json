{"ast":null,"code":"import _regeneratorRuntime from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/priyanka/task/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from '../apis/axios';\nimport history from \"../history\";\nimport { toastr } from 'react-redux-toastr';\nimport { POST_LIST, CREATE_POST } from './types'; //it defines our type of application\n\nvar header = {\n  \"Content-Type\": \"application/json\" //function will show the success or warning\n\n};\n\nvar toastrSuccess = function toastrSuccess(title, msg) {\n  return toastr.success(title, msg);\n};\n\nvar toastrFailure = function toastrFailure(title, msg) {\n  return toastr.error(title, msg);\n}; //login action creator\n\n\nexport var signIn = function signIn(formValues) {\n  return (\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.post('jwt-auth/v1/token', _objectSpread({}, formValues), {\n                header: header\n              });\n\n            case 3:\n              response = _context.sent;\n              console.log(response.data);\n              toastrSuccess(\"SignIn Successful\", \"\".concat(formValues.username)); //It will set the currently logged in user dat on localstorage\n\n              localStorage.setItem(\"validToken\", response.data.token);\n              localStorage.setItem(\"UserId\", response.data.user_id);\n              localStorage.setItem(\"userName\", response.data.user_display_name); //console.log(localStorage.getItem(\"validToken\"))\n\n              history.push('/');\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              toastrFailure(\" Error due to form submission\", \"\".concat(formValues.username));\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }))\n  );\n}; //............................................................................................\n//redister user action creator\n\nexport var signUp = function signUp(formValues) {\n  return (\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.post('wp/v2/users/register', _objectSpread({}, formValues));\n\n            case 3:\n              response = _context2.sent;\n              console.log(response.data);\n              toastrSuccess(\"\".concat(response.data.message), \"\".concat(formValues.username));\n              history.push('/');\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              toastrFailure(\"Error due to form submission\", \"\".concat(formValues.username));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }))\n  );\n}; //...........................................................................................\n//log out action creator\n\nexport var logOutUserAction = function logOutUserAction() {\n  localStorage.removeItem(\"UserId\");\n  localStorage.removeItem(\"authToken\");\n  toastrSuccess(\"LogOut Status\", \"You are Successfully logout your profile\");\n}; //..........................................................................................\n//update user profile action creator\n\nexport var updateUser = function updateUser(formValues) {\n  return (\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return axios.post('/wp/v2/users/register', _objectSpread({}, formValues));\n\n            case 2:\n              response = _context3.sent;\n              console.log(response.data.message);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))\n  );\n}; //..........................................................................................\n//show all post action creator\n\nexport var postList = function postList() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                console.log(header);\n                _context4.next = 4;\n                return axios.get('/wp/v2/posts');\n\n              case 4:\n                response = _context4.sent;\n                console.log(response.data, 'actions');\n                dispatch({\n                  type: POST_LIST,\n                  payload: response.data\n                });\n                _context4.next = 12;\n                break;\n\n              case 9:\n                _context4.prev = 9;\n                _context4.t0 = _context4[\"catch\"](0);\n                toastrFailure(\"something went wrong \", \"\");\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 9]]);\n      }));\n\n      return function (_x) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n}; //............................................................................................\n//Create your own post action creator\n\nexport var postCreate = function postCreate(formValues) {\n  return (\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              console.log(header);\n              _context5.next = 4;\n              return axios.post('/wp/v2/posts', _objectSpread({}, formValues));\n\n            case 4:\n              response = _context5.sent;\n              console.log(response.data);\n              _context5.next = 11;\n              break;\n\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](0);\n              toastrFailure(\"Error due to creating post\", \"\".concat(formValues.title));\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 8]]);\n    }))\n  );\n};","map":{"version":3,"sources":["/home/priyanka/task/myapp/src/actions/index.js"],"names":["axios","history","toastr","POST_LIST","CREATE_POST","header","toastrSuccess","title","msg","success","toastrFailure","error","signIn","formValues","post","response","console","log","data","username","localStorage","setItem","token","user_id","user_display_name","push","signUp","message","logOutUserAction","removeItem","updateUser","postList","dispatch","get","type","payload","postCreate"],"mappings":"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","sourcesContent":["import  axios from '../apis/axios'\nimport history from \"../history\"\nimport {toastr} from 'react-redux-toastr'\nimport {POST_LIST , CREATE_POST} from './types'\n\n//it defines our type of application\nconst header = {\n  \"Content-Type\" : \"application/json\"\n}\n\n//function will show the success or warning\nconst toastrSuccess = (title,msg) => toastr.success(title,msg)\nconst toastrFailure = (title,msg) => toastr.error(title,msg) \n\n//login action creator\nexport const signIn = formValues => async () => {\n    try{\n      const response  = await axios.post('jwt-auth/v1/token',{...formValues},{header:header});\n      console.log(response.data)\n      \n      toastrSuccess(`SignIn Successful`,`${formValues.username}`)\n      \n      //It will set the currently logged in user dat on localstorage\n      localStorage.setItem(\"validToken\", response.data.token);\n      localStorage.setItem(\"UserId\", response.data.user_id);\n      localStorage.setItem(\"userName\", response.data.user_display_name);    \n      //console.log(localStorage.getItem(\"validToken\"))\n      history.push('/'); \n    }\n    catch(error){\n      toastrFailure(` Error due to form submission`,`${formValues.username}`);\n    }     \n  };\n//............................................................................................\n\n//redister user action creator\n  export const signUp = formValues => async () => {\n    try{\n      const response  = await axios.post('wp/v2/users/register',{...formValues});\n      console.log(response.data)\n      toastrSuccess(`${response.data.message}`,`${formValues.username}`)\n      history.push('/'); \n    }\n    catch(error){\n      toastrFailure(`Error due to form submission`,`${formValues.username}`);\n    }   \n  };\n//...........................................................................................\n  \n//log out action creator\n  export const logOutUserAction = () => {\n    localStorage.removeItem(\"UserId\")\n    localStorage.removeItem(\"authToken\");\n\n    toastrSuccess(`LogOut Status`,`You are Successfully logout your profile`);\n  };\n\n//..........................................................................................\n\n//update user profile action creator\n  \nexport const updateUser = formValues => async () => {\n    //console.log(formValues);\n    const response  = await axios.post('/wp/v2/users/register',{...formValues});\n    console.log(response.data.message);\n  };\n\n//..........................................................................................\n\n//show all post action creator\n\n  export const postList = () => async (dispatch) => {\n    try{\n        console.log(header);      \n        const response =await axios.get('/wp/v2/posts');\n        console.log(response.data ,'actions');\n        dispatch ({type: POST_LIST ,payload :response.data});\n    }catch(error){\n      toastrFailure(`something went wrong `,``);\n    }\n    \n  };\n//............................................................................................\n\n//Create your own post action creator\n\n  export const postCreate = formValues => async () => {\n    try{\n      console.log(header)\n      const response  = await axios.post('/wp/v2/posts',{...formValues});\n      console.log(response.data);\n    }catch(error){\n      toastrFailure(`Error due to creating post`,`${formValues.title}`);\n    } \n  };"]},"metadata":{},"sourceType":"module"}